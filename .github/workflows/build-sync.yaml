name: Build Docker Image and Sync GitOps

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  ENVIRONMENT: eu-central-1-dev
  GITHUB_REPOSITORY: ${{ github.event.repository.name }}
  KUSTOMIZE_VERSION: v5.6.0

jobs:
  build-and-sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Generate version
        id: version
        run: |
          DATE=$(date +'%Y%m%d')
          SHORT_SHA=$(git rev-parse --short HEAD)
          VERSION="${DATE}-${SHORT_SHA}"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Generated version: ${VERSION}"

      - name: Set up Kustomize
        run: |
          curl -sLo kustomize.tar.gz https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/${{ env.KUSTOMIZE_VERSION }}/kustomize_${{ env.KUSTOMIZE_VERSION }}_linux_amd64.tar.gz
          tar -xzf kustomize.tar.gz
          sudo mv kustomize /usr/local/bin/
          kustomize version

      - name: Validate kustomize build
        run: |
          # Validate that kustomize build works without changing the image tag
          if ! kustomize build "deployments/overlays/${{ env.ENVIRONMENT }}" > /dev/null; then
            echo "❌ Kustomize validation failed"
            exit 1
          fi
          echo "✅ Kustomize validation successful"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          build-args: |
            VERSION=${{ env.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update kustomization with new image tag and version
        run: |
          # Update image tag in overlay
          cd "deployments/overlays/${{ env.ENVIRONMENT }}"
          kustomize edit set image "ghcr.io/monkescience/${{ env.GITHUB_REPOSITORY }}:${{ env.VERSION }}"
          kustomize edit add label "app.kubernetes.io/version:${{ env.VERSION }}" --without-selector --force

      - name: Generate deployment manifests
        run: |
          mkdir -p "manifests/${{ env.ENVIRONMENT }}"
          kustomize build "deployments/overlays/${{ env.ENVIRONMENT }}" > "manifests/${{ env.ENVIRONMENT }}/manifest.yaml"

      - name: Generate GitHub App token
        id: generate-token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2
        with:
          app-id: ${{ vars.GITOPS_APP_ID }}
          private-key: ${{ secrets.GITOPS_APP_PRIVATE_KEY }}
          owner: monkescience
          repositories: gitops

      - name: Checkout GitOps repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          repository: monkescience/gitops
          path: gitops
          token: ${{ steps.generate-token.outputs.token }}

      - name: Update GitOps repository
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          mkdir -p "gitops/manifests/${{ env.GITHUB_REPOSITORY }}/${{ env.ENVIRONMENT }}"
          cp "manifests/${{ env.ENVIRONMENT }}/manifest.yaml" "gitops/manifests/${{ env.GITHUB_REPOSITORY }}/${{ env.ENVIRONMENT }}/"
          cd gitops

          git config user.name "${{ vars.GITOPS_APP_USER_NAME }}"
          git config user.email "${{ vars.GITOPS_APP_ID }}+${{ vars.GITOPS_APP_USER_NAME }}@users.noreply.github.com"

          git add "manifests/${{ env.GITHUB_REPOSITORY }}/${{ env.ENVIRONMENT }}/manifest.yaml"

          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "chore(${{ env.GITHUB_REPOSITORY }}): update ${{ env.ENVIRONMENT }} manifest to version ${VERSION}"
            git push
          fi
